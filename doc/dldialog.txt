  The DLDialog Handbook
  Harald Hoyer, dldialog@parzelle.de
  Version 1.4.1, 04.04.2002

  This Handbook describes DLDialog Version 1.4.1
  ______________________________________________________________________

  Table of Contents


  1. Introduction
  2. Installation
     2.1 How to obtain DLDialog
     2.2 Requirements
     2.3 Compilation and installation
        2.3.1 Normal compilation procedure
        2.3.2 More options for configure
        2.3.3 INSTALL

  3. The Manual Page
     3.1 NAME
     3.2 SYNOPSIS
     3.3 DESCRIPTION
     3.4 OPTIONS
     3.5 ENVIRONMENT
     3.6 BUGS

  4. DLDialog Program Syntax
     4.1 General Syntax
     4.2 Common options
     4.3 Container Commands
     4.4 Simple Commands
     4.5 Script Example

  5. Questions and answers
     5.1 What is this start, stop for?
     5.2 How can I display a status box (info box)?
     5.3 How can I specify the geometry of the dialog in qt mode?
     5.4 How can I change elements depending on others?
     5.5 How can I configure my xterm to display nice colours?
     5.6 Why does my dialog start up so minimised?
     5.7 Why can't I see my list?

  6. NEWS
  7. The Change Log
  8. The TODO List
  9. COPYING


  ______________________________________________________________________

  11..  IInnttrroodduuccttiioonn

  _P_l_e_a_s_e _d_o_n_t _f_o_r_g_e_t _t_o _r_e_a_d _t_h_e _f_r_e_q_u_e_n_t_l_y _a_s_k_e_d _q_u_e_s_t_i_o_n_s_!  _T_h_a_n_k _Y_o_u_!

  DLDialog offers the capability to draw a variety of widgets, in order
  to ease the human user in feeding input to the script.  The program is
  designed to be particularly useful to implement system administration
  scripts.  I hope you will enjoy this program.

  Harald Hoyer dldialog@parzelle.de

  22..  IInnssttaallllaattiioonn



  22..11..  HHooww ttoo oobbttaaiinn DDLLDDiiaalloogg

  DLDialog can be found in
  <http://parzelle.de/Linux/Applications/dldialog>.

  22..22..  RReeqquuiirreemmeennttss

  In order to successfully compile DLDialog, you need:

  +o  qt-2 or newer versions

  +o  tvision 0.7 or newer versions

  +o  libdl

  +o  gettext, if you want i18n (internationalisation)

  +o  automake version 1.4 or newer versions

  +o  Autoconf version 2.13 or newer versions

  +o  libtool version 1.2 or newer versions

  +o  kdoc (ftp.kde.org part of kdevelop) for documentation purposes

  +o  sgml-tools version >= 1.0.8 for documentation purposes

  Some of the required libraries as well as DLDialog itself can be found
  on  <http://parzelle.de/Linux/Applications/>.

  22..33..  CCoommppiillaattiioonn aanndd iinnssttaallllaattiioonn

  22..33..11..  NNoorrmmaall ccoommppiillaattiioonn pprroocceedduurree


  ______________________________________________________________________
  $ aclocal
  $ autoheader
  $ automake -a
  $ autoconf
  $ ./configure --prefix=/usr
  ______________________________________________________________________


  If you do have kdoc installed:

  ______________________________________________________________________
  $ make
  ______________________________________________________________________


  else:

  ______________________________________________________________________
  $ cd src;make
  ______________________________________________________________________


  To install type:

  ______________________________________________________________________
  $ su -c "make install"
  ______________________________________________________________________



  If you want to deinstall it just do a:

  ______________________________________________________________________
  $ su -c "make uninstall"
  ______________________________________________________________________



  22..33..22..  MMoorree ooppttiioonnss ffoorr ccoonnffiigguurree


  +o  --without-qt                                if you want to build
     DLDialog without qt

  +o  --with-qt-dir=<dir>            where the root of qt is installed

  +o  --with-qt-includes=<dir>       where the qt includes are.

  +o  --with-qt-libraries=<dir>      where the qt library is installed.

  +o  --without-tv                         if you want to build DLDialog
     without tvision

  +o  --with-tvision-dir=<dir>       where the root of tv is installed

  +o  --with-tvision-includes=<dir>  where the tv includes are.

  +o  --with-tvision-libraries=<dir> where the tv library is installed.


  See also the files README and INSTALL that come with the distribution.

  AAggaaiinn:: Should you run into problems, please report them to me.

  22..33..33..  IINNSSTTAALLLL



  Basic Installation
  ==================

     These are generic installation instructions.

     The `configure' shell script attempts to guess correct values for
  various system-dependent variables used during compilation.  It uses
  those values to create a `Makefile' in each directory of the package.
  It may also create one or more `.h' files containing system-dependent
  definitions.  Finally, it creates a shell script `config.status' that
  you can run in the future to recreate the current configuration, a file
  `config.cache' that saves the results of its tests to speed up
  reconfiguring, and a file `config.log' containing compiler output
  (useful mainly for debugging `configure').

     If you need to do unusual things to compile the package, please try
  to figure out how `configure' could check whether to do them, and mail
  diffs or instructions to the address given in the `README' so they can
  be considered for the next release.  If at some point `config.cache'
  contains results you don't want to keep, you may remove or edit it.

     The file `configure.in' is used to create `configure' by a program
  called `autoconf'.  You only need `configure.in' if you want to change
  it or regenerate `configure' using a newer version of `autoconf'.

  The simplest way to compile this package is:

    1. `cd' to the directory containing the package's source code and type
       `./configure' to configure the package for your system.  If you're
       using `csh' on an old version of System V, you might need to type
       `sh ./configure' instead to prevent `csh' from trying to execute
       `configure' itself.

       Running `configure' takes awhile.  While running, it prints some
       messages telling which features it is checking for.

    2. Type `make' to compile the package.

    3. Optionally, type `make check' to run any self-tests that come with
       the package.

    4. Type `make install' to install the programs and any data files and
       documentation.

    5. You can remove the program binaries and object files from the
       source code directory by typing `make clean'.  To also remove the
       files that `configure' created (so you can compile the package for
       a different kind of computer), type `make distclean'.  There is
       also a `make maintainer-clean' target, but that is intended mainly
       for the package's developers.  If you use it, you may have to get
       all sorts of other programs in order to regenerate files that came
       with the distribution.

  Compilers and Options
  =====================

     Some systems require unusual options for compilation or linking that
  the `configure' script does not know about.  You can give `configure'
  initial values for variables by setting them in the environment.  Using
  a Bourne-compatible shell, you can do that on the command line like
  this:
       CC=c89 CFLAGS=-O2 LIBS=-lposix ./configure

  Or on systems that have the `env' program, you can do it like this:
       env CPPFLAGS=-I/usr/local/include LDFLAGS=-s ./configure

  Compiling For Multiple Architectures
  ====================================

     You can compile the package for more than one kind of computer at the
  same time, by placing the object files for each architecture in their
  own directory.  To do this, you must use a version of `make' that
  supports the `VPATH' variable, such as GNU `make'.  `cd' to the
  directory where you want the object files and executables to go and run
  the `configure' script.  `configure' automatically checks for the
  source code in the directory that `configure' is in and in `..'.

     If you have to use a `make' that does not supports the `VPATH'
  variable, you have to compile the package for one architecture at a time
  in the source code directory.  After you have installed the package for
  one architecture, use `make distclean' before reconfiguring for another
  architecture.

  Installation Names
  ==================

     By default, `make install' will install the package's files in
  `/usr/local/bin', `/usr/local/man', etc.  You can specify an
  installation prefix other than `/usr/local' by giving `configure' the
  option `--prefix=PATH'.

     You can specify separate installation prefixes for
  architecture-specific files and architecture-independent files.  If you
  give `configure' the option `--exec-prefix=PATH', the package will use
  PATH as the prefix for installing programs and libraries.
  Documentation and other data files will still use the regular prefix.

     In addition, if you use an unusual directory layout you can give
  options like `--bindir=PATH' to specify different values for particular
  kinds of files.  Run `configure --help' for a list of the directories
  you can set and what kinds of files go in them.

     If the package supports it, you can cause programs to be installed
  with an extra prefix or suffix on their names by giving `configure' the
  option `--program-prefix=PREFIX' or `--program-suffix=SUFFIX'.

  Optional Features
  =================

     Some packages pay attention to `--enable-FEATURE' options to
  `configure', where FEATURE indicates an optional part of the package.
  They may also pay attention to `--with-PACKAGE' options, where PACKAGE
  is something like `gnu-as' or `x' (for the X Window System).  The
  `README' should mention any `--enable-' and `--with-' options that the
  package recognizes.

     For packages that use the X Window System, `configure' can usually
  find the X include and library files automatically, but if it doesn't,
  you can use the `configure' options `--x-includes=DIR' and
  `--x-libraries=DIR' to specify their locations.

  Specifying the System Type
  ==========================

     There may be some features `configure' can not figure out
  automatically, but needs to determine by the type of host the package
  will run on.  Usually `configure' can figure that out, but if it prints
  a message saying it can not guess the host type, give it the
  `--host=TYPE' option.  TYPE can either be a short name for the system
  type, such as `sun4', or a canonical name with three fields:
       CPU-COMPANY-SYSTEM

  See the file `config.sub' for the possible values of each field.  If
  `config.sub' isn't included in this package, then this package doesn't
  need to know the host type.

     If you are building compiler tools for cross-compiling, you can also
  use the `--target=TYPE' option to select the type of system they will
  produce code for and the `--build=TYPE' option to select the type of
  system on which you are compiling the package.

  Sharing Defaults
  ================

     If you want to set default values for `configure' scripts to share,
  you can create a site shell script called `config.site' that gives
  default values for variables like `CC', `cache_file', and `prefix'.
  `configure' looks for `PREFIX/share/config.site' if it exists, then
  `PREFIX/etc/config.site' if it exists.  Or, you can set the
  `CONFIG_SITE' environment variable to the location of the site script.
  A warning: not all `configure' scripts look for a site script.

  Operation Controls
  ==================

     `configure' recognizes the following options to control how it
  operates.

  `--cache-file=FILE'
       Use and save the results of the tests in FILE instead of
       `./config.cache'.  Set FILE to `/dev/null' to disable caching, for
       debugging `configure'.

  `--help'
       Print a summary of the options to `configure', and exit.

  `--quiet'
  `--silent'
  `-q'
       Do not print messages saying which checks are being made.  To
       suppress all normal output, redirect it to `/dev/null' (any error
       messages will still be shown).

  `--srcdir=DIR'
       Look for the package's source code in directory DIR.  Usually
       `configure' can determine that directory automatically.

  `--version'
       Print the version of Autoconf used to generate the `configure'
       script, and exit.

  `configure' also accepts some other, not widely useful, options.



  33..  TThhee MMaannuuaall PPaaggee

  33..11..  NNAAMMEE

  dldialog - display dialog boxes in text and graphics mode to interact
  with scripts

  33..22..  SSYYNNOOPPSSIISS

  ddllddiiaalloogg [ -b | -q ] [ -g | -q | -t | -p ] [ -dvh ] [ -f _i_n_f_i_l_e ] [ --
  EXTRAOPTIONS ]


  33..33..  DDEESSCCRRIIPPTTIIOONN

  This documentation is no longer being maintained and may be inaccurate
  or incomplete.  The Texinfo documentation is now the authoritative
  source.

  This manual page documents the calling syntax of  DDLLDDiiaalloogg.

  DDLLDDiiaalloogg parses standard input or the _i_n_f_i_l_e and interprets it as
  described in the Texinfo documentation.

  33..44..  OOPPTTIIOONNSS


     _-_b_, _-_-_s_t_a_r_t
        Start the dldialog server.

     _-_e_, _-_-_s_t_o_p
        Stop the dldialog server.

     _-_d_, _-_-_d_e_b_u_g
        Display debugging output.

     _-_f_, _-_-_f_i_l_e _i_n_f_i_l_e
        Read input from _i_n_f_i_l_e, rather than from stdin.

     _-_g_, _-_-_g_e_n_e_r_i_c
        Load a generic interface library specified by the _D_L_D___P_R_E_L_O_A_D
        environment variable.

     _-_h_, _-_-_h_e_l_p
        Display small help and exit.

     _-_p_, _-_-_p_a_r_s_e
        Parse only to check input.

     _-_q_, _-_-_q_t
        Use Qt (X11) interface.

     _-_t_, _-_-_t_v
        Use tvision (terminal) interface (default).

     _-_v_, _-_-_v_e_r_s_i_o_n
        Display version information and exit.

     _E_X_T_R_A_O_P_T_I_O_N_S
        All options after -- are passed to the used module. Its useful
        to pass e.g. a -geometry argument to the qt modul.

  33..55..  EENNVVIIRROONNMMEENNTT


     _D_L_D___P_R_E_L_O_A_D
        Use this to preload a specific interface, rather than the
        default ones.

  33..66..  BBUUGGSS

  Report them to parzelle.de>.

  44..  DDLLDDiiaalloogg PPrrooggrraamm SSyynnttaaxx

  In the following text, contents in brackets <> is defined at other
  locations in this text and contents in square brackets [] is optional.


  44..11..  GGeenneerraall SSyynnttaaxx


     //// _[_<_c_o_m_m_e_n_t_>_]
        DLDialog ignores the rest of the line after //.

     ## _[_<_c_o_m_m_e_n_t_>_]
        DLDialog ignores the rest of the line after #.

     {{<block>}}
        block consists of multiple combinations of commands surrounded
        by braces.

     _<_n_a_m_e_>
        name is a single word or several words surrounded by
        parenthesis. A & will specify the next letter as the shortcut
        for this item.

        "_<_s_t_r_i_n_g_>""" Strings are concatenated like in ANSI C.

     _<_v_a_r_n_a_m_e_>
        varname is a single word beginning with an alphabetic letter,
        which contains no special characters.

     _<_v_a_l_u_e_>
        value is a <varname>, a <name> or a number.

     _<_e_x_e_c_u_t_a_b_l_e_>
        executable is a filename that has the executable flag set and
        can be executed by e.g. _s_h _-_c _"_<_e_x_e_c_u_t_a_b_l_e_>_".

        This file will be executed and the standard output of this file
        will be parsed and executed as a DLDialog program.

        Variables set with the executable will have global effect.

     _<_c_o_m_m_a_n_d_>;;
        normal commands end with a semicolon.

  44..22..  CCoommmmoonn ooppttiioonnss

  The following options can be given to all commands:

     _[--ffoorrkk
        Together with the -exec tag this will let your spawned childs
        live if the parent dies.

     _[--hheeiigghhtt
        _<_h_e_i_g_h_t _i_n _p_e_r_c_e_n_t_>_]" Specifies the height of the element in
        percent of the parent size.

     _[--wwiiddtthh
        _<_w_i_d_t_h _i_n _p_e_r_c_e_n_t_>_]" Specifies the width of the element in
        percent of the parent size.

     _[--ffoonntt _<_X_1_1 _f_o_n_t _s_p_e_c_i_f_i_e_r_>_]
        [--ssiizzee _<_f_o_n_t_s_i_z_e_>_] _[--bbgg _<_b_a_c_k_g_r_o_u_n_d_c_o_l_o_r_>_] _[--ffgg _<_f_o_r_e_g_r_o_u_n_d_-
        _c_o_l_o_r_>_] " -font specifies the font of the element in X11/QT
        mode.

        -size specifies the size of the font. E.g. a  absolut numeric
        size or mini, small, normal, large, huge or big. Default size is
        12.

        -bg specifies the background color of the font. Can be e.g.
        blue, white, "#FF0010".
        -fg specifies the foreground color of the font. Can be e.g.
        blue, white, "#FF0010".


  44..33..  CCoonnttaaiinneerr CCoommmmaannddss


     ddiiaalloogg _[_<_n_a_m_e_>_]
        [--mmooddaall_] {{_<_b_l_o_c_k_>}}" Draws a dialog window with title <name>
        which contains the elements contained in <block>.

        If the argument -modal is set, input for other dialogs is
        blocked until the last modal dialog exited.

        There should be one or more buttons with the -exit argument in
        this dialog to let the user exit the dialog.

     ffoorrmm _[_<_n_a_m_e_>_] {{_<_b_l_o_c_k_>}}
        Draws a rectangle with title <name> which contains the elements
        in <block>.

        DLDialog tries to order the elements more or less effective in
        this rectangle.

     rrooww _[_<_n_a_m_e_>_] {{_<_b_l_o_c_k_>}}
        Draws a rectangle with title <name> which contains the elements
        in <block>.

        DLDialog orders the elements in a row in this rectangle.

     ccooll _[_<_n_a_m_e_>_] {{_<_b_l_o_c_k_>}}
        Draws a rectangle with title <name> which contains the elements
        in <block>.

        DLDialog orders the elements in a column in this rectangle.

     rraaddiioolliisstt _[_<_n_a_m_e_>_]
        [--vvaarr _<_v_a_r_n_a_m_e_>_] {{_<_b_l_o_c_k_>}}" Draws a rectangle with title <name>
        which contains radio buttons in <block>.

        DLDialog orders the radio buttons in a column in this rectangle.

        The -var argument specifies a variable named <varname>.

        At creation this variable will be read and if set to a number,
        the radio button with this number will be activated per default.

        If the dialog exits the variable will be set to the number of
        the selected radio button.

        E.g. TESTVAR="1".

     cchheecckklliisstt _[_<_n_a_m_e_>_]
        [--vvaarr _<_v_a_r_n_a_m_e_>_] {{_<_b_l_o_c_k_>}}" Draws a rectangle with title <name>
        which contains check buttons in <block>.

        DLDialog orders the check buttons in a column in this rectangle.

        The -var argument specifies a variable named <varname>.

        At creation this variable will be read and if set to a
        number(s), the check button(s) with this number(s) will be
        activated per default.

        If the dialog exits the variable will be set to the number(s) of
        the selected check button(s).
        E.g. TESTVAR="1 3 5".

     lliisstt _[_<_n_a_m_e_>_]
        [--vvaarr _<_v_a_r_n_a_m_e_>_] _[--mmuullttii _] {{ lliissttiitteemm _[_<_a_r_g_s_>_];;
         _._._.}}" Draws a scrollable list with title <name> which contains
        the listitem elements in <block>.

        DLDialog orders the list items in a column in this rectangle.

        The -var argument specifies a variable named <varname>.

        At creation this variable will be read and if set to a
        number(s), the listitem(s) with this number(s) will be activated
        per default.

        If the dialog exits the variable will be set to the number(s) of
        the selected listitem(s).

        E.g. TESTVAR="1 3 5".

        The -multi argument enables multi line selection, where the line
        numbers, that were selected, are stored space separated in the
        variable.

        In tvision mode FF77 marks all, FF88unmarks all and FF99 toggles all.

     ccoommbboobbooxx
        --vvaarr _<_v_a_r_n_a_m_e_>_] {{ ccoommbbooiitteemm _[_<_a_r_g_s_>_];; _._._.}}" Draws a combobox
        with title <name> which contains the comboitem elements in
        <block>.

        The -var argument specifies a variable named <varname>.

        At creation this variable will be read and if set to a
        number(s), the nth comboitem will be activated per default.

        If the dialog exits the variable will be set to the number of
        the selected comboitem.

        E.g. TESTVAR="1".

  44..44..  SSiimmppllee CCoommmmaannddss


     bbuuttttoonn _<_n_a_m_e_>
        [--vvaarr _<_v_a_r_n_a_m_e_> _[--sseett _<_v_a_l_u_e_>_] _[--aadddd _<_v_a_l_u_e_>_]_] _[--eexxeecc _<_e_x_e_-
        _c_u_t_a_b_l_e_>_] _[--iimmaaggee _<_i_m_a_g_e _f_i_l_e_>_] _[--mmoovviiee _<_m_o_v_i_e _f_i_l_e_>_] _[--ssiiggnn _]
        _[--eexxiitt_] ;;" Draws a button labelled with <name>.

        The -var argument specifies a variable named <varname>, which
        will be set, if the button is pressed,  to the either the
        <value> specified with -set

        If instead of the -set argument -add is specified, the old value
        of the variable is not cleared but the <value> will be appended
        with a space as a separator.

        The -exec argument specifies an executable, which will be
        executed if the button is pressed.

        The -image argument specifies an image file, which will be
        displayed left to the text. If the -sign option is given
        additionally, the image will be displayed on top of the text.

        The -movie argument specifies an animated image file, which will
        be displayed left to the text. If the -sign option is given
        additionally, the image will be displayed on top of the text.

        The -exit argument means that the dialog will be terminated if
        the button is pressed.

     cchheecckkbbuuttttoonn _<_n_a_m_e_>
        [--vvaarr _<_v_a_r_n_a_m_e_> _[--sseett _<_v_a_l_u_e_>_] _[--aadddd _<_v_a_l_u_e_>_]_] ;;" Draws a check
        button labelled with <name>.

        Check buttons can only be grouped with the checklist command.

        The -var argument specifies a variable named <varname>, which
        will be set if the button  is selected to the either the <value>
        specified with -set.

        If instead of the -set argument -add is specified, the old value
        of the variable is not cleared but the <value> will be appended
        with a space as a separator.

        If the variable is already set to the value specified with -set
        or the variable contains a value specified with -add, the
        checkbutton is activated per default.

     rraaddiioobbuuttttoonn _<_n_a_m_e_>
        [--vvaarr _<_v_a_r_n_a_m_e_> _[--sseett _<_v_a_l_u_e_>_] _[--aadddd _<_v_a_l_u_e_>_]_] ;;" Draws a radio
        button labelled with <name>.

        Radio buttons can only be grouped with the radiolist command.

        The -var argument specifies a variable named <varname>, which
        will be set ,if the button is selected, to the either the
        <value> specified with -set.

        If instead of the -set argument -add is specified, the old value
        of the variable is not cleared but the <value> will be appended
        with a space as a separator.

        If the variable is already set to the value specified with -set
        or the variable contains a value specified with -add, the
        radiobutton is activated per default.

        NOTE: If multiple radio buttons are activated per default, the
        last one set will only be activated.

     ccoommbbooiitteemm _<_n_a_m_e_>
        [--vvaarr _<_v_a_r_n_a_m_e_> _[--sseett _<_v_a_l_u_e_>_] _[--aadddd _<_v_a_l_u_e_>_]_] ;;" Draws a
        combobox item labeled with <name>.

        Comboitems can only be grouped with the combolist command.

        The -var argument specifies a variable named <varname>, which
        will be set ,if the item is selected, to the either the <value>
        specified with -set.

        If instead of the -set argument -add is specified, the old value
        of the variable is not cleared but the <value> will be appended
        with a space as a separator.

        If the variable is already set to the value specified with -set
        or the variable contains a value specified with -add, the item
        is activated per default.

        NOTE: If multiple items are activated per default, the last one
        set will only be activated.


     lliissttiitteemm _<_n_a_m_e_>
        [--vvaarr  _<_v_a_r_n_a_m_e_> _[--sseett _<_v_a_l_u_e_>_] _[--aadddd _<_v_a_l_u_e_>_]_] _[--eexxeecc _<_e_x_e_-
        _c_u_t_a_b_l_e_>_] _[--iimmaaggee _<_i_m_a_g_e _f_i_l_e_>_] _[--eexxiitt_] ;;" Draws a listitem
        labeled with <name>.

        listitems can only exists within a list block.

        The -var argument specifies a variable named <varname>, which
        will be set ,if the button is selected, to the either the
        <value> specified with -set.

        If instead of the -set argument -add is specified, the old value
        of the variable is not cleared but the <value> will be appended
        with a space as a separator.

        If the variable is already set to the value specified with -set
        or the variable contains a value specified with -add, the
        listitem is activated per default.

        NOTE: If multiple listitems are activated per default and -multi
        is not set in the list, the last one set will only be activated.

        The -image argument specifies an image file, which will be
        displayed left to the text.

        The -exec argument specifies an executable, which will be
        executed if the listitem is activated.

        The -exit argument means that the dialog will be terminated if
        the listitem is double-clicked.


     tteexxtt _<_n_a_m_e_> ;;
        Displays <name> as text. Should not be longer than 255 chars,
        because of some limitations in the tvision library!

        Text can include newlines or backslashed characters, which will
        be transformed like in C strings. E.g. \n is newline, \t
        tabulator, etc.

     tteexxttbbooxx _<_n_a_m_e_> ;;
        Displays <name> as text in a box with scrollbars, if needed.

        Text can include newlines or backslashed characters, which will
        be transformed like in C strings.  E.g. \n is newline, \t
        tabulator, etc.

     tteexxttbbooxx
        --ffiillee _<_f_i_l_e_n_a_m_e_> ;;" Displays the file <filename> as text in a
        box with scrollbars, if needed.

     iinnppuutt
        --vvaarr _<_v_a_r_n_a_m_e_> _[--ppaasssswwdd_] _[--lleennggtthh _<_v_a_l_u_e_> _[--nnuummeerriicc_] _[--iipp_] ;;"
        Displays an input field, which is named <name>.

        If -passwd is specified, no text is shown.

        If -length is specified, the field is <varname> long.

        If -numeric is specified, only numeric input is accepted

        If -ip is specified, only IP address formatted input is accepted

        -ip and -numeric cant be used together!

        The -var argument specifies a variable named <varname>, which
        will be set to the contents of the input field, if the dialog
        exits.

        If the variable is already set it will be the default value for
        the input field.

        The -exec argument specifies an executable, which will be
        executed if return is pressed or the dialog exits.

        The -exit argument means that the dialog will be terminated if
        return is pressed.

     iimmaaggee _<_n_a_m_e_> ;;
        Displays an image with filename <name>.

     mmoovviiee _<_n_a_m_e_> ;;
        Displays an animated image with filename <name>.

     ggaauuggee
        --vvaarr _<_v_a_r_n_a_m_e_> _[--eexxeecc _<_e_x_e_c_u_t_a_b_l_e_>_] _[--eexxiitt_] ;;" Draws a meter
        labeled with <name>.  The meter indicates the percentage.

        The -exec argument specifies an executable, which will be
        executed immediately.

        New percentages are read from standard input of the executable.
        Integer or double values are accepted separated by spaces. Non-
        digit characters will be over-read.  The meter is updated to
        reflect each new percentage.  The variable specified with the
        varname is set to the percentage, when the dialog exits or to
        the exit status of the executable, if it exits with a negative
        value.

        If the -exit argument is set, the dialog will be exited if the
        -exec child exits.

     _<_v_a_r_n_a_m_e_>==_<_v_a_l_u_e_> ;;
        Sets the global variable <varname> to <value>.

  44..55..  SSccrriipptt EExxaammppllee

  Has no sense ... just to demonstrate all language elements of
  DLDialog.



  ______________________________________________________________________
  #!./dldialog -tf
   dialog "All GUI Elements" -width 100 -height 100 {
        col {
           text "A Column";
           button "Button 1 30%" -height 30;
           button "Button 2 70%" -height 70;
        }

        text ""; //Spacer

        col {
           text "A Row";
           row -width 100 {
              button "Button 1 20%" -width 20;
              button "Button 1 30%" -width 30;
              button "Button 2 50%" -width 50;
           }
        }

        text ""; //Spacer

        col {
           text "The Lists";
           row -width 100 {
              lv="2";
              list "A &List" -width 33 -var lv {
                 listitem "1. Listitem";
                 listitem "2. Listitem";
                 listitem "3. Listitem";
              }

              text "  "; //Spacer

              checkvar="1 3";
              checklist "A &Checklist" -var checkvar -width 33 {
                 checkbutton "&1. checkbutton";
                 checkbutton "&2. checkbutton";
                 checkbutton "&3. checkbutton";
              }

              text "  "; //Spacer

              radiovar="2";

              radiolist "A &Radiolist" -var radiovar -width 33 {
                 radiobutton "&1. radiobutton";
                 radiobutton "&2. radiobutton";
                 radiobutton "&3. radiobutton";
              }
           }
       }

        text ""; //Spacer
        col {
           STATIC_GAUGE="50";
           text "Gauges";
           row {
             gauge  -exit -exec "sh -c 'for i in `seq 1 100`;do echo $i;sleep 1;done'";
             gauge  -var STATIC_GAUGE;
           }
        }
        text ""; //Spacer
        row {
           text "ComboBox";
           cb="2";
           combobox -var cb {
             comboitem "Item 1" -var ci -set "1";
             comboitem "Item 2" -var ci -set "2";
             comboitem "Item 3" -var ci -set "3";
           }
        }
        text ""; //Spacer

        row -width 100 {
           text "Normal:";
           iv="bla bla bla";
           input -var iv;

           text " Numeric:";
           ivn="1234567890";
           input -var ivn -numeric;

           text " IP:";
           ivi="123.123.123.123";
           input -var ivi -ip;
        }

        text ""; //Spacer

        row -width 100 {
           button "&OK - seen all" -exit;
           button "&Source" -exec "./dldialog <<EOF
             dialog \"Source\" -width 100 -height 100 {
                   textbox \"A TextBox\" -file \"../tests/test8\" -width 100 -height 100 ;
                   text \"\"; //Spacer
                   button \"OK\" -exit;
             }
  EOF";
           button "&Not OK - output is scrambled" -exit;
        }
  }
  ______________________________________________________________________



  55..  QQuueessttiioonnss aanndd aannsswweerrss

  55..11..  WWhhaatt iiss tthhiiss ssttaarrtt,, ssttoopp ffoorr??

  If you plan to display several dialogs in your session, it is useful
  to start a dialog server with:



  ______________________________________________________________________
  if [ -z "$DLDIALOG_INFIFO" ]; then
    dld_waitforend="yes";
  fi

  function dldialog_start () $lcub;
    ret=$($DLDIALOG --start $@)
    ERR="$?"
    if [ "$ERR" != "0" ]; then
      echo Exited with $ERR
      exit 10;
    fi
    eval "$ret"
    export DLDIALOG_INFIFO
    trap dldialog_stop EXIT
    trap dldialog_stop SIGCHLD
    trap dldialog_stop SIGPIPE
  }

  dldialog_start $ARGS
  ______________________________________________________________________


  At the end of the script dldialog_stop is now called, which can look
  like this:

  ______________________________________________________________________
  function dldialog_stop () {
    if [ "$dld_waitforend" = "yes" ]; then
       $DLDIALOG --wait
       dldirname=`dirname "$DLDIALOG_INFIFO"`
       if [ -d $dldirname ]; then
         rm -fr $dldirname
       fi
    else
       $DLDIALOG --stop
    fi
  }
  ______________________________________________________________________


  All of these functions (and more) can be found in dldialog_funcs,
  which is in this documentation directory or in the tests directory of
  the source package.

  55..22..  HHooww ccaann II ddiissppllaayy aa ssttaattuuss bbooxx ((iinnffoo bbooxx))??

  You want the user to see, what is going on. OK here is an example:



  ______________________________________________________________________
  #!/bin/sh

  function infobox () {
    $(dldialog -q <<EOF
    dialog "Please wait...         " {
      text "$1";
      gauge -exit -exec "$2" ;
    }
  EOF)
  }

  infobox "Preparing the system" "echo 0;sleep 2;echo 50;sleep 2;echo 100;";

  function testf () {
  # Print the percent of completition
    echo 0;
  # Do s.th. useful :)
    sleep 2;
  # Print the percent of completition
    echo 50;
  # Do s.th. useful :)
    sleep 2;
  # Print the percent of completition
    echo 100;
  }

  declare -fx testf

  infobox "Preparing the system" testf;
  ______________________________________________________________________



  55..33..  HHooww ccaann II ssppeecciiffyy tthhee ggeeoommeettrryy ooff tthhee ddiiaalloogg iinn qqtt mmooddee??

  Start dldialog with the -geometry in the EXTRA OPTIONS section. E.g.:

  ______________________________________________________________________
  $ dldialog -q -- -geometry 640x480 << EOF
  dialog "TEST" {
      text "TEST";
      button "&OK" -exit;
  }
  EOF
  ______________________________________________________________________



  55..44..  HHooww ccaann II cchhaannggee eelleemmeennttss ddeeppeennddiinngg oonn ootthheerrss??

  Suppose you want to get the host name and domain name of a host. You
  want to preset the domain name with the domain of the host name, once
  the user has entered it.



  ______________________________________________________________________
  #!/bin/sh

  # Start the server
  result=$(dldialog --start $@)
  eval "$result"
  export DLDIALOG_INFIFO

  export OK="0";

  while [ "$OK" != "1" ]; do

    result=$(dldialog <<EOF
    dialog "Maindialog" {
      hostname="$hostname";
      domain="$domain";
      text "";
        row {
          col {
            text "Hostname:";
            text "Domainname:";
          }
          col {
            input -var hostname -length 20 -exit;
            input -var domain -length 20;
          }
        }
        button "&OK" -var OK -set "1" -exit;
    }
  EOF)

    eval "$result"

    if [ -z "$domain" ]; then
      export domain=`echo $hostname|(IFS='.' read a b;echo $b)`;
    fi

  done

  dldialog --wait
  ______________________________________________________________________


  NNoottee:: The user has to press return after entering the hostname to let
  the dialog exit.

  55..55..  HHooww ccaann II ccoonnffiigguurree mmyy xxtteerrmm ttoo ddiissppllaayy nniiccee ccoolloouurrss??

  Try to set the TERM variable to one of: xterm-color, color-xterm or
  rxvt. Best results are on Linux console or in a rxvt.

  ______________________________________________________________________
  $ export TERM=xterm-color
  ______________________________________________________________________



  55..66..  WWhhyy ddooeess mmyy ddiiaalloogg ssttaarrtt uupp ssoo mmiinniimmiisseedd??

  Same as below.

  55..77..  WWhhyy ccaann''tt II sseeee mmyy lliisstt??

  If no -width and -height is specified the element shows up with it's
  smallest size.

  Remember: -width and -height are relative to the element with the most
  inner {}. The dialog element's width and height tags are relative to
  the -geometry size (or as a default 600x400).

  Specifying -width and -height also gives dldialog a hint which
  elements have to grow how much, if the dialog resizes.

  This one is ugly:

  ______________________________________________________________________
  dialog "Not so nice" {
    list "A very small list" {
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
    }
  }
  ______________________________________________________________________


  Here a nicer one:

  ______________________________________________________________________
  dialog "Not so nice" -width 100 -height 100 {
    list "A very small list" -width 100 -height 100 {
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
      listitem "Item";
    }
  }
  ______________________________________________________________________



  66..  NNEEWWSS



  Changes in release 1.3.0:
  * many many variable fixes

  Changes in release 1.1.7:
  * you can move now with cursor up and down instead of tab

  Changes in release 1.1.6:
  * combobox in text should work

  Changes in release 1.1.1:
  * movie and -movie added: cause of resize bugs in dld_image(QT)
  * gauge exits dialog only if the forked child exits
  * listitems can have images

  Changes in release 1.1.0:
  * buttons can now have multiple lines of text
  * dld_col and dld_row with title: bug fixed

  Changes in release 1.0.12:
  * animated pictures now supported with qmovie class
  * list variables are now handled correctly
  * buttons can now be disabled

  Changes in release 1.0.11:

  Changes in release 1.0.10:
  * handle X11-window closes in qt mode correctly
  * can now start without controlling terminal (e.g. X-filemanager)
  * can now parse lines with inifinite length
  * better string conversion for tv

  Changes in release 1.0.9:
  * list non-multi (tv) fixed
  * col, row, form cosmetic changes
  * gauge (qt) cosmetic changes
  * button images (qt) cosmetic changes

  Changes in release 1.0.8:
  * Gauge fixes
  * image fixes
  * configure fixes (--with-qt, --with-tv and qimgio testing)
  * parser fixes
  * no more zombies.

  Changes in release 1.0.6:
  * qt and tv are nearly complete
  * more verbose error messages from the parser
  * images in qt
  * several improvements
  * gauge exec now can parse floats and overreads non-digits

  Changes in release 1.0.2:
  * better geometry handling
  * more verbose parser messages.

  Changes in release 1.0.0:
  * small fixes
  * gettext support (i18n) for dldialog and for scripts

  Changes in release 0.27.0:
  * TV and QT are now fully implemented (except menus)

  Changes in release 0.23.0:
  * exit dialog if -exit in listitems is set and item is double-clicked

  Changes in release 0.19.2:
  * tvision module stabilised
  * new tags for input
  * -multi in lists
  * the RPM has been split

  Changes in release 0.16:
  * set variables immediatly in lists, radio and checks
  * gauge variables contain negative exit status of child if non-null

  Changes in release 0.15:
  * Now more secure with /tmp/.dldialog_ttyXXX Dir
  * More security, due to dynamic strings (no buffer overflows)
  * Better terminal behaviour

  Changes in release 0.13:
  * server-client protocol now mainly with sockets
  * test/dldialog_funcs added to easily program with bash

  Changes in release 0.12:
  * small testsuite, try make check
  * setsid
  * made dldialog multiparsing safe
  * removed dlclose cause it segfaulted
  * fixes for glibc-2.0.111 and egcs-1.1.1
  * --parse now works with libdld_gen.so

  Changes in release 0.11:
  * Major interface change
  * tvision port nearly complete

  Changes in release 0.6:
  * added list, listitem
  * updated doc
  * preset of radiolist, checklist and list with -var
  * updated tvision interface



  77..  TThhee CChhaannggee LLoogg



  2002-04-04  harald  <harald@redhat.com>

          * doc/classdoc/Makefile.am, doc/classdoc/qt/Makefile.am, doc/classdoc/tv/Makefile.am, doc/dldialog.info-2, intl/Makefile, po/cat-id-tbl.c, po/dldialog.pot, po/POTFILES, tests/dldialog-scripts.po, doc/dldialog.dvi, doc/dldialog.info-1, doc/dldialog.info, ChangeLog, config.sub, doc/dldialog.1, doc/dldialog-1.html, doc/dldialog-2.html, doc/dldialog-3.html, doc/dldialog-4.html, doc/dldialog-5.html, doc/dldialog-6.html, doc/dldialog-7.html, doc/dldialog-8.html, doc/dldialog-9.html, doc/dldialog.html, doc/dldialog.man.sgml, doc/dldialog.sgml, doc/dldialog.txt, ltmain.sh, Makefile.am:
          minor changes to make it run under the current Red Hat

          * src/dld_parser_yacc.yy: added some ;

          * autogen.sh, ChangeLog.old:
          *** empty log message ***

  2001-03-14  harald  <harald@redhat.com>

          * tests/script5, tests/script6, tests/script7, tests/test10, tests/test1, tests/test12, tests/test13, tests/test14, tests/test15, tests/test16, tests/test1.cmp, tests/test2, tests/test2.cmp, tests/test3, tests/test4, tests/test5, tests/test6, tests/test7, tests/test8, tests/test9, tests/tick.xpm, tests/weiter.xpm, tests/wizard, tests/zurueck.xpm:
          initial checkin at sourceforge

          * tests/script5, tests/script6, tests/script7, tests/test10, tests/test1, tests/test12, tests/test13, tests/test14, tests/test15, tests/test16, tests/test1.cmp, tests/test2, tests/test2.cmp, tests/test3, tests/test4, tests/test5, tests/test6, tests/test7, tests/test8, tests/test9, tests/tick.xpm, tests/weiter.xpm, tests/wizard, tests/zurueck.xpm:
          New file.

          * tests/pnglogo.png, tests/script1, tests/script2, tests/script3, tests/script4:
          initial checkin at sourceforge

          * tests/pnglogo.png, tests/script1, tests/script2, tests/script3, tests/script4:
          New file.

          * tests/penguin2.gif, tests/pinguin.xpm:
          initial checkin at sourceforge

          * tests/penguin2.gif, tests/pinguin.xpm:
          New file.

          * tests/penguin.gif:
          initial checkin at sourceforge

          * tests/penguin.gif: New file.

          * src/DLD_TV/tcombobx.cpp, src/DLD_TV/tcombobx.h, src/DLD_TV/tsinputl.cpp, src/DLD_TV/tsinputl.h, tests/ani.gif, tests/calc, tests/.cvsignore, tests/delete.xpm, tests/dldialog_funcs, tests/dldialog-scripts.po, tests/DLD-start.xpm, tests/DLD.xpm, tests/dltest.pl, tests/example1, tests/example2, tests/example3, tests/example4, tests/exit.xpm, tests/extractstr.awk, tests/finish.xpm, tests/folder.xpm, tests/help.xpm, tests/hilfe.xpm, tests/kaputt, tests/Makefile.am, tests/network_settings.xpm, tests/netzwerk.png:
          initial checkin at sourceforge

          * src/DLD_TV/tcombobx.cpp, src/DLD_TV/tcombobx.h, src/DLD_TV/tsinputl.cpp, src/DLD_TV/tsinputl.h, tests/ani.gif, tests/calc, tests/.cvsignore, tests/delete.xpm, tests/dldialog_funcs, tests/dldialog-scripts.po, tests/DLD-start.xpm, tests/DLD.xpm, tests/dltest.pl, tests/example1, tests/example2, tests/example3, tests/example4, tests/exit.xpm, tests/extractstr.awk, tests/finish.xpm, tests/folder.xpm, tests/help.xpm, tests/hilfe.xpm, tests/kaputt, tests/Makefile.am, tests/network_settings.xpm, tests/netzwerk.png:
          New file.

          * src/DLD_TV/fileview.cc, src/DLD_TV/fileview.h, src/DLD_TV/nmcmbobx.cpp, src/DLD_TV/nmcmbovw.cpp, src/DLD_TV/nmcmbown.cpp, src/DLD_TV/nmsinput.cpp, src/DLD_TV/tcmbovwr.cpp, src/DLD_TV/tcmbowin.cpp:
          initial checkin at sourceforge

          * src/DLD_TV/fileview.cc, src/DLD_TV/fileview.h, src/DLD_TV/nmcmbobx.cpp, src/DLD_TV/nmcmbovw.cpp, src/DLD_TV/nmcmbown.cpp, src/DLD_TV/nmsinput.cpp, src/DLD_TV/tcmbovwr.cpp, src/DLD_TV/tcmbowin.cpp:
          New file.

          * src/DLD_TV/dld_list.cc, src/DLD_TV/dld_list.h, src/DLD_TV/dld_listitem.cc, src/DLD_TV/dld_listitem.h, src/DLD_TV/dld_radiolist.cc, src/DLD_TV/dld_radiolist.h, src/DLD_TV/dld_row.cc, src/DLD_TV/dld_row.h, src/DLD_TV/dld_textbox.cc, src/DLD_TV/dld_textbox.h, src/DLD_TV/dld_text.cc, src/DLD_TV/dld_text.h, src/DLD_TV/dld_tvapp.cc, src/DLD_TV/dld_tvapp.h, src/DLD_TV/dld_tvcheck.cc, src/DLD_TV/dld_tvcheck.h, src/DLD_TV/dld_tvcontainer.cc, src/DLD_TV/dld_tvcontainer.h, src/DLD_TV/dld_tvlib.h, src/DLD_TV/dld_tvobj.cc, src/DLD_TV/dld_tvobj.h, src/DLD_TV/dld_tvradio.cc, src/DLD_TV/dld_tvradio.h:
          initial checkin at sourceforge

          * src/DLD_TV/dld_list.cc, src/DLD_TV/dld_list.h, src/DLD_TV/dld_listitem.cc, src/DLD_TV/dld_listitem.h, src/DLD_TV/dld_radiolist.cc, src/DLD_TV/dld_radiolist.h, src/DLD_TV/dld_row.cc, src/DLD_TV/dld_row.h, src/DLD_TV/dld_textbox.cc, src/DLD_TV/dld_textbox.h, src/DLD_TV/dld_text.cc, src/DLD_TV/dld_text.h, src/DLD_TV/dld_tvapp.cc, src/DLD_TV/dld_tvapp.h, src/DLD_TV/dld_tvcheck.cc, src/DLD_TV/dld_tvcheck.h, src/DLD_TV/dld_tvcontainer.cc, src/DLD_TV/dld_tvcontainer.h, src/DLD_TV/dld_tvlib.h, src/DLD_TV/dld_tvobj.cc, src/DLD_TV/dld_tvobj.h, src/DLD_TV/dld_tvradio.cc, src/DLD_TV/dld_tvradio.h:
          New file.

          * src/DLD_TV/dld_dialog.cc, src/DLD_TV/dld_dialog.h, src/DLD_TV/dld_form.cc, src/DLD_TV/dld_form.h, src/DLD_TV/dld_gauge.cc, src/DLD_TV/dld_gauge.h, src/DLD_TV/dld_geom.cc, src/DLD_TV/dld_geom.h, src/DLD_TV/dld_input.cc, src/DLD_TV/dld_input.h, src/DLD_TV/dld_lib.cc:
          initial checkin at sourceforge

          * src/DLD_TV/dld_dialog.cc, src/DLD_TV/dld_dialog.h, src/DLD_TV/dld_form.cc, src/DLD_TV/dld_form.h, src/DLD_TV/dld_gauge.cc, src/DLD_TV/dld_gauge.h, src/DLD_TV/dld_geom.cc, src/DLD_TV/dld_geom.h, src/DLD_TV/dld_input.cc, src/DLD_TV/dld_input.h, src/DLD_TV/dld_lib.cc:
          New file.

          * src/DLD_TV/dld_checklist.cc, src/DLD_TV/dld_checklist.h, src/DLD_TV/dld_col.cc, src/DLD_TV/dld_col.h, src/DLD_TV/dld_combobox.cc, src/DLD_TV/dld_combobox.h, src/DLD_TV/dld_comboitem.cc, src/DLD_TV/dld_comboitem.h:
          initial checkin at sourceforge

          * src/DLD_TV/dld_checklist.cc, src/DLD_TV/dld_checklist.h, src/DLD_TV/dld_col.cc, src/DLD_TV/dld_col.h, src/DLD_TV/dld_combobox.cc, src/DLD_TV/dld_combobox.h, src/DLD_TV/dld_comboitem.cc, src/DLD_TV/dld_comboitem.h:
          New file.

          * src/DLD_QT/dld_list.cc, src/DLD_QT/dld_list.h, src/DLD_QT/dld_listitem.cc, src/DLD_QT/dld_listitem.h, src/DLD_QT/dld_menuitem.cc, src/DLD_QT/dld_qtapp.cc, src/DLD_QT/dld_qtapp.h, src/DLD_QT/dld_qtcontainer.cc, src/DLD_QT/dld_qtcontainer.h, src/DLD_QT/dld_qtlib.h, src/DLD_QT/dld_qtobj.cc, src/DLD_QT/dld_qtobj.h, src/DLD_QT/dld_radio.cc, src/DLD_QT/dld_radio.h, src/DLD_QT/dld_radiolist.cc, src/DLD_QT/dld_radiolist.h, src/DLD_QT/dld_row.cc, src/DLD_QT/dld_row.h, src/DLD_QT/dld_textbox.cc, src/DLD_QT/dld_textbox.h, src/DLD_QT/dld_text.cc, src/DLD_QT/dld_text.h, src/DLD_TV/.cvsignore, src/DLD_TV/dld_button.cc, src/DLD_TV/dld_button.h, src/DLD_TV/Makefile.am:
          initial checkin at sourceforge

          * src/DLD_QT/dld_list.cc, src/DLD_QT/dld_list.h, src/DLD_QT/dld_listitem.cc, src/DLD_QT/dld_listitem.h, src/DLD_QT/dld_menuitem.cc, src/DLD_QT/dld_qtapp.cc, src/DLD_QT/dld_qtapp.h, src/DLD_QT/dld_qtcontainer.cc, src/DLD_QT/dld_qtcontainer.h, src/DLD_QT/dld_qtlib.h, src/DLD_QT/dld_qtobj.cc, src/DLD_QT/dld_qtobj.h, src/DLD_QT/dld_radio.cc, src/DLD_QT/dld_radio.h, src/DLD_QT/dld_radiolist.cc, src/DLD_QT/dld_radiolist.h, src/DLD_QT/dld_row.cc, src/DLD_QT/dld_row.h, src/DLD_QT/dld_textbox.cc, src/DLD_QT/dld_textbox.h, src/DLD_QT/dld_text.cc, src/DLD_QT/dld_text.h, src/DLD_TV/.cvsignore, src/DLD_TV/dld_button.cc, src/DLD_TV/dld_button.h, src/DLD_TV/Makefile.am:
          New file.

          * src/DLD_QT/dld_gauge.cc, src/DLD_QT/dld_gauge.h, src/DLD_QT/dld_image.cc, src/DLD_QT/dld_image.h, src/DLD_QT/dld_input.cc, src/DLD_QT/dld_input.h, src/DLD_QT/dld_lib.cc:
          initial checkin at sourceforge

          * src/DLD_QT/dld_gauge.cc, src/DLD_QT/dld_gauge.h, src/DLD_QT/dld_image.cc, src/DLD_QT/dld_image.h, src/DLD_QT/dld_input.cc, src/DLD_QT/dld_input.h, src/DLD_QT/dld_lib.cc:
          New file.

          * src/DLD_QT/dld_checklist.h, src/DLD_QT/dld_col.cc, src/DLD_QT/dld_col.h, src/DLD_QT/dld_combobox.cc, src/DLD_QT/dld_combobox.h, src/DLD_QT/dld_comboitem.cc, src/DLD_QT/dld_comboitem.h, src/DLD_QT/dld_dialog.cc, src/DLD_QT/dld_dialog.h, src/DLD_QT/dld_form.cc, src/DLD_QT/dld_form.h:
          initial checkin at sourceforge

          * src/DLD_QT/dld_checklist.h, src/DLD_QT/dld_col.cc, src/DLD_QT/dld_col.h, src/DLD_QT/dld_combobox.cc, src/DLD_QT/dld_combobox.h, src/DLD_QT/dld_comboitem.cc, src/DLD_QT/dld_comboitem.h, src/DLD_QT/dld_dialog.cc, src/DLD_QT/dld_dialog.h, src/DLD_QT/dld_form.cc, src/DLD_QT/dld_form.h:
          New file.

          * src/DLD_GEN/.cvsignore, src/DLD_GEN/dld_gengui.h, src/DLD_GEN/dld_lib.cc, src/DLD_GEN/Makefile.am, src/dldialog.cc, src/dldialog.h, src/dld_parser_yacc.yy, src/DLD_QT/.cvsignore, src/DLD_QT/dld_button.cc, src/DLD_QT/dld_button.h, src/DLD_QT/dld_check.cc, src/DLD_QT/dld_check.h, src/DLD_QT/dld_checklist.cc, src/DLD_QT/Makefile.am, src/dld_radiobutton.h, src/dld_radiolist.h, src/dld_row.h, src/dld_textbox.h, src/dld_text.h, src/parser.sed:
          initial checkin at sourceforge

          * src/DLD_GEN/.cvsignore, src/DLD_GEN/dld_gengui.h, src/DLD_GEN/dld_lib.cc, src/DLD_GEN/Makefile.am, src/dldialog.cc, src/dldialog.h, src/dld_parser_yacc.yy, src/DLD_QT/.cvsignore, src/DLD_QT/dld_button.cc, src/DLD_QT/dld_button.h, src/DLD_QT/dld_check.cc, src/DLD_QT/dld_check.h, src/DLD_QT/dld_checklist.cc, src/DLD_QT/Makefile.am, src/dld_radiobutton.h, src/dld_radiolist.h, src/dld_row.h, src/dld_textbox.h, src/dld_text.h, src/parser.sed:
          New file.

          * src/dld_parser_lex.cc, src/dld_parser_lex.ll:
          initial checkin at sourceforge

          * src/dld_parser_lex.cc, src/dld_parser_lex.ll:
          New file.

          * po/de.po, po/dldialog.pot, po/stamp-cat-id, src/.cvsignore, src/dld_button.h, src/dld_checkbutton.h, src/dld_checklist.h, src/dld_col.h, src/dld_combobox.h, src/dld_comboitem.h, src/dld_container.h, src/dld_dialog.cc, src/dld_dialog.h, src/dld_form.h, src/dld_gauge.cc, src/dld_gauge.h, src/dld_gui.cc, src/dld_gui.h, src/dld_image.h, src/dld_input.h, src/dld_lib.h, src/dld_list.h, src/dld_listitem.h, src/dld_menu.h, src/dld_obj.cc, src/dld_obj.h, src/dld_out.cc, src/dld_out.h, src/dld_parser.h, src/Makefile.am:
          initial checkin at sourceforge

          * po/de.po, po/dldialog.pot, po/stamp-cat-id, src/.cvsignore, src/dld_button.h, src/dld_checkbutton.h, src/dld_checklist.h, src/dld_col.h, src/dld_combobox.h, src/dld_comboitem.h, src/dld_container.h, src/dld_dialog.cc, src/dld_dialog.h, src/dld_form.h, src/dld_gauge.cc, src/dld_gauge.h, src/dld_gui.cc, src/dld_gui.h, src/dld_image.h, src/dld_input.h, src/dld_lib.h, src/dld_list.h, src/dld_listitem.h, src/dld_menu.h, src/dld_obj.cc, src/dld_obj.h, src/dld_out.cc, src/dld_out.h, src/dld_parser.h, src/Makefile.am:
          New file.

          * perl/doc/Makefile.am, po/cat-id-tbl.c, po/ChangeLog, po/.cvsignore, po/Makefile.in.in, po/POTFILES, po/POTFILES.in:
          initial checkin at sourceforge

          * perl/doc/Makefile.am, po/cat-id-tbl.c, po/ChangeLog, po/.cvsignore, po/Makefile.in.in, po/POTFILES, po/POTFILES.in:
          New file.

          * perl/doc/DlDialog.html, perl/doc/DlDialog.pod, perl/doc/DlDialog.tex:
          initial checkin at sourceforge

          * perl/doc/DlDialog.html, perl/doc/DlDialog.pod, perl/doc/DlDialog.tex:
          New file.

          * perl/dldialog.pm, perl/DlRadioList.pm, perl/DlWidgetGroup.pm, perl/DlWizzard.pm, perl/doc/.cvsignore, perl/I18n.pm, perl/Makefile.am, perl/maketransfile.pl, perl/maketransfile.pl.de, perl/maketransfile.pl.tpl, perl/tdialog.pm.de, perl/tdialog.pm.tpl, perl/test.dl, perl/test.hlp:
          initial checkin at sourceforge

          * perl/dldialog.pm, perl/DlRadioList.pm, perl/DlWidgetGroup.pm, perl/DlWizzard.pm, perl/doc/.cvsignore, perl/I18n.pm, perl/Makefile.am, perl/maketransfile.pl, perl/maketransfile.pl.de, perl/maketransfile.pl.tpl, perl/tdialog.pm.de, perl/tdialog.pm.tpl, perl/test.dl, perl/test.hlp:
          New file.

          * perl/DlDialog.pm, perl/DlFileSelect.pm, perl/DlHelp.pm, perl/DlHelp.pm.de, perl/DlHelp.pm.tpl, perl/DlInputField.pm, perl/DlList.pm, perl/DlMessage.pm, perl/DlMessage.pm.de, perl/DlMessage.pm.tpl:
          initial checkin at sourceforge

          * perl/DlDialog.pm, perl/DlFileSelect.pm, perl/DlHelp.pm, perl/DlHelp.pm.de, perl/DlHelp.pm.tpl, perl/DlInputField.pm, perl/DlList.pm, perl/DlMessage.pm, perl/DlMessage.pm.de, perl/DlMessage.pm.tpl:
          New file.

          * intl/libgettext.h, intl/libintl.h, intl/linux-msg.sed, intl/loadinfo.h, intl/loadmsgcat.c, intl/localealias.c, intl/po2tbl.sed, intl/po2tbl.sed.in, intl/textdomain.c, intl/xopen-msg.sed, perl/.cvsignore, perl/DlButtonGroup.pm, perl/DlButton.pm, perl/DlCheckList.pm, perl/DlComboBox.pm:
          initial checkin at sourceforge

          * intl/libgettext.h, intl/libintl.h, intl/linux-msg.sed, intl/loadinfo.h, intl/loadmsgcat.c, intl/localealias.c, intl/po2tbl.sed, intl/po2tbl.sed.in, intl/textdomain.c, intl/xopen-msg.sed, perl/.cvsignore, perl/DlButtonGroup.pm, perl/DlButton.pm, perl/DlCheckList.pm, perl/DlComboBox.pm:
          New file.

          * intl/bindtextdom.c, intl/cat-compat.c, intl/dcgettext.c, intl/dgettext.c, intl/explodename.c, intl/finddomain.c, intl/gettext.c, intl/gettext.h, intl/gettextP.h, intl/hash-string.h, intl/intl-compat.c, intl/l10nflist.c:
          initial checkin at sourceforge

          * intl/bindtextdom.c, intl/cat-compat.c, intl/dcgettext.c, intl/dgettext.c, intl/explodename.c, intl/finddomain.c, intl/gettext.c, intl/gettext.h, intl/gettextP.h, intl/hash-string.h, intl/intl-compat.c, intl/l10nflist.c:
          New file.

          * intl/ChangeLog, intl/Makefile, intl/Makefile.in, intl/VERSION:
          initial checkin at sourceforge

          * intl/ChangeLog, intl/Makefile, intl/Makefile.in, intl/VERSION:
          New file.

          * doc/classdoc/.cvsignore, doc/classdoc/Makefile.am, doc/classdoc/qt/.cvsignore, doc/classdoc/qt/Makefile.am, doc/classdoc/tv/.cvsignore, doc/classdoc/tv/Makefile.am, doc/tv.gif:
          initial checkin at sourceforge

          * doc/classdoc/.cvsignore, doc/classdoc/Makefile.am, doc/classdoc/qt/.cvsignore, doc/classdoc/qt/Makefile.am, doc/classdoc/tv/.cvsignore, doc/classdoc/tv/Makefile.am, doc/tv.gif:
          New file.

          * doc/tv-maxi.gif:
          initial checkin at sourceforge

          * doc/tv-maxi.gif: New file.

          * doc/qt.gif, doc/red.gif, doc/top.html:
          initial checkin at sourceforge

          * doc/qt.gif, doc/red.gif, doc/top.html:
          New file.

          * doc/qt-maxi.gif:
          initial checkin at sourceforge

          * doc/qt-maxi.gif: New file.

          * doc/dldialog.txt, doc/frame.html, doc/index.html, doc/pre.awk:
          initial checkin at sourceforge

          * doc/dldialog.txt, doc/frame.html, doc/index.html, doc/pre.awk:
          New file.

          * doc/dldialog.sgml.cpp, doc/dldialog.texi:
          initial checkin at sourceforge

          * doc/dldialog.sgml.cpp, doc/dldialog.texi:
          New file.

          * doc/dldialog.sgml:
          initial checkin at sourceforge

          * doc/dldialog.sgml: New file.

          * doc/dldialog.info-1, doc/dldialog.info-2, doc/dldialog.man.sgml, doc/dldialog.man.sgml.body, doc/dldialog.man.sgml.in:
          initial checkin at sourceforge

          * doc/dldialog.info-1, doc/dldialog.info-2, doc/dldialog.man.sgml, doc/dldialog.man.sgml.body, doc/dldialog.man.sgml.in:
          New file.

          * doc/dldialog.dvi, doc/dldialog.html, doc/dldialog.info:
          initial checkin at sourceforge

          * doc/dldialog.dvi, doc/dldialog.html, doc/dldialog.info:
          New file.

          * doc/dldialog.1, doc/dldialog-9.html:
          initial checkin at sourceforge

          * doc/dldialog.1, doc/dldialog-9.html:
          New file.

          * doc/dldialog-2.html, doc/dldialog-3.html, doc/dldialog-4.html, doc/dldialog-5.html, doc/dldialog-6.html, doc/dldialog-7.html, doc/dldialog-8.html:
          initial checkin at sourceforge

          * doc/dldialog-2.html, doc/dldialog-3.html, doc/dldialog-4.html, doc/dldialog-5.html, doc/dldialog-6.html, doc/dldialog-7.html, doc/dldialog-8.html:
          New file.

          * doc/.cvsignore, doc/dldialog-10.html, doc/dldialog-1.html, doc/Makefile.am, ltmain.sh, missing, mkinstalldirs, stamp-h.in:
          initial checkin at sourceforge

          * doc/.cvsignore, doc/dldialog-10.html, doc/dldialog-1.html, doc/Makefile.am, ltmain.sh, missing, mkinstalldirs, stamp-h.in:
          New file.

          * ltconfig: initial checkin at sourceforge

          * ltconfig: New file.

          * configure.in, dldialog.kdevprj, dldialog.spec.in, install-sh:
          initial checkin at sourceforge

          * configure.in, dldialog.kdevprj, dldialog.spec.in, install-sh:
          New file.

          * config.sub: initial checkin at sourceforge

          * config.sub: New file.

          * acconfig.h, acinclude.m4, NEWS, README, README.developer, README.QT, TODO:
          initial checkin at sourceforge

          * acconfig.h, acinclude.m4, NEWS, README, README.developer, README.QT, TODO:
          New file.

          * ChangeLog, INSTALL, Makefile.am, Makefile.cvs:
          initial checkin at sourceforge

          * ChangeLog, INSTALL, Makefile.am, Makefile.cvs:
          New file.

          * COPYING: initial checkin at sourceforge

          * COPYING: New file.

          * ABOUT-NLS, AUTHORS:
          initial checkin at sourceforge

          * ABOUT-NLS, AUTHORS:
          New file.

          * .cvsignore: initial checkin at sourceforge

          * .cvsignore: New file.

  1999-09-15  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_QT/dld_list.cc (create): curious setCurrentItem(0)

          * src/DLD_TV/dld_list.cc (close_brace): no preselection of multilist

  1999-09-13  Harald Hoyer  <dldialog@parzelle.de>

          * many many variable fixes

          * create() to all objects

          * src/dld_obj.h: added is_created, was_created

          * src/dld_obj.cc (create): added

          * src/dld_gauge.cc (create): likewise

          * src/dld_obj.cc (activate): resolve symbolic "/bin/sh" link

  1999-09-07  Harald Hoyer  <dldialog@parzelle.de>

          * src/dld_dialog.h: gcc-2.95 tweaks

          * src/DLD_QT/dld_button.cc (movieUpdate): gcc-2.95 tweaks

  1999-09-06  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_TV/dld_combobox.cc (create): initial value is the first

  1999-09-01  Harald Hoyer  <dldialog@parzelle.de>

          * src/dld_parser_lex.ll: added -fork

          * src/dld_parser_yacc.yy: added FORK

          * src/dld_obj.h: added killchilds flag, set_killchild

          * src/dld_gauge.cc (create): likewise

          * src/dld_obj.cc (activate): changed $SHELL to /bin/sh

  1999-08-19  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_QT/dld_check.cc (slot_activate): signal_cbpress in deactivate

  1999-08-18  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_QT/dld_combobox.cc (DLD_QTComboBox): removed slot activate

          * src/DLD_TV/dld_dialog.cc (handleEvent): added UP and DOWN keys

  1999-08-16  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_TV/dld_combobox.cc (create): cleanup of preset variables

  1999-08-10  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_TV/dld_row.cc (DLD_TVRow): likewise

          * src/DLD_TV/dld_col.cc (DLD_TVObj): setSizeAdd(1)

  1999-08-09  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_QT/dld_list.h (class DLD_QTList): dict now with listitems

          * src/DLD_QT/dld_list.cc (create): create listitems

          * src/DLD_QT/dld_listitem.cc: load image only once

          * src/DLD_TV/dld_tvobj.cc (conname): tabs corrected

  1999-07-21  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_QT/dld_radiolist.cc (DLD_QTRadioList): likewise

          * src/DLD_QT/dld_checklist.cc (DLD_QTCheckList): no frame if no name

          * src/DLD_TV/dld_radiolist.cc (DLD_TVRadioList): likewise

          * src/DLD_TV/dld_checklist.cc (DLD_TVCheckList): no frame if no name

          * src/dldialog.cc: fixed exit and return values

  1999-07-19  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_TV/dld_textbox.cc (handleEvent): added keys for scrolling

  1999-06-18  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_TV/dld_input.cc (DLD_TVInput): minimal width=3 (test13)

  1999-06-17  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_TV/dld_list.cc (handleEvent): if key pressed, jump to items

  1999-06-09  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_QT/dld_text.cc (create): -font added

          * src/DLD_QT/dld_textbox.cc (create): -font added

  1999-05-19  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_QT/dld_button.cc (movieUpdate): optimizations

  1999-05-07  Harald Hoyer  <dldialog@parzelle.de>

          * src/dld_parser_yacc.yy: MOVIE and MOVIEFILE added
          * src/dld_parser_lex.ll: likewise

          * src/dld_image.h (class DLD_Image): setIsMovie added

          * src/dld_obj.h (class DLD_Obj): is_movie added

  1999-05-06  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_TV/dld_button.h (class DLD_TVButton): can now have
          multiple lines

  1999-05-05  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_TV/dld_button.h (class DLD_TVButton): added -disable

          * src/DLD_QT/dld_button.cc: movies
          * src/DLD_QT/dld_image.cc: movies

  1999-04-22  Harald Hoyer  <dldialog@parzelle.de>

          * src/dldialog.cc (dld_server): catch no tty
          (dld_send): fixed problem with buffer length

          * src/DLD_QT/dld_dialog.cc (closeEvent): handle window close
          (done): don't call QDialog::done if mainDialog

          * src/DLD_QT/dld_qtapp.cc (exec): cleanup moved to dialog

  1999-04-21  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_QT/dld_button.cc (drawButtonLabel): center pixmap

          * src/DLD_QT/dld_form.cc (DLD_QTForm): setBorder

          * src/DLD_QT/dld_col.cc (DLD_QTCol): setBorder
          * src/DLD_QT/dld_row.cc (DLD_QTRow): setBorder

          * src/DLD_TV/dld_list.cc (DLD_TVList): forgot isMulti(false)

          * src/DLD_TV/dld_col.cc (DLD_TVObj): use label

          * src/DLD_TV/dld_row.cc (DLD_TVRow): use label

          * src/DLD_TV/dld_form.cc (DLD_TVForm): use label

  1999-04-19  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_TV/dld_gauge.cc (draw): can now display 100

          * src/DLD_QT/dld_gauge.cc (set_progress): can now display smaller
          values

          * src/DLD_QT/dld_button.cc (create): check is image is loaded
          (minimumSize): fallback to parent class if no pixmap is loaded
          (drawButtonLabel): likewise

          * src/dld_parser_lex.ll: no more spaces between concatenation
          strings

          * src/dld_obj.cc (activate): set_env with this
          (activate): dup2 with STDERR was wrong
          (activate): DLD_run++

          * acinclude.m4: added --with-qt, --with-tv and qimgio testing
          * configure.in: likewise

          * src/dld_gui.h: splitted into seperate header files

          * src/dld_gauge.cc (parse): fixed child handling (zombies)

  1999-04-14  Harald Hoyer  <dldialog@parzelle.de>

          * src/dld_app.cc (parse): improved parsing
          (parse): improved parsing

          * src/DLD_QT/dld_qtapp.cc (exec): fixed usleep call (microseconds)

  1999-04-13  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_QT/dld_button.cc (drawButtonLabel): improved

          * src/DLD_QT/dld_image.cc: added

          * src/DLD_QT/dld_button.cc (drawButtonLabel): image added

          * src/parser.sed: better error messages from the parser

          * src/DLD_QT/dld_qtapp.cc (exec): switched to processEvents

          * src/DLD_QT/dld_dialog.cc (create): geometry handling

  1999-04-12  Harald Hoyer  <dldialog@parzelle.de>

          * src/dldialog.cc: gettext

          * src/dld_parser_lex.ll: gettext

          * src/DLD_QT/dld_qtobj.cc (DLD_QTObj): handle fixed height, width

          * src/DLD_QT/dld_row.cc (create): handle fixed height, width

          * src/DLD_QT/dld_col.cc (create): handle fixed height, width

          * src/DLD_TV/dld_button.cc (DLD_TVButton): fixed height

  1999-04-09  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_QT/dld_dialog.cc: correct geometry management
          * src/DLD_QT/dld_form.cc: likewise
          * src/DLD_QT/dld_col.cc: likewise
          * src/DLD_QT/dld_row.cc: likewise

  1999-04-08  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_TV/dld_gauge.cc (set_progress): set variable every time

          * src/DLD_QT/dld_qtobj.cc (activate): added (for -exit)

          * src/DLD_QT/dld_qtcontainer.cc (gauge): implemented
          (combobox): implemented

          * src/DLD_QT/dld_combobox.cc: added
          * src/DLD_QT/dld_combobox.h: added

          * src/DLD_QT/dld_gauge.cc: added
          * src/DLD_QT/dld_gauge.h: added

  1999-04-07  Harald Hoyer  <dldialog@parzelle.de>

          * src/dld_parser_yacc.yy: textbox can have no <name>

          * src/DLD_QT/dld_textbox.h (class DLD_QTTextBox):
          changed to new interface

          * src/DLD_QT/dld_textbox.cc (class DLD_QTTextBox):
          changed to new interface

          * src/DLD_QT/dld_qtobj.cc (DLD_QTObj): variable inits

          * src/DLD_QT/dld_qtcontainer.cc (textbox): added

          * src/dldialog.cc (dld_server): init of tty_fdin,
          tty_fdout if not in tvision mode

          * src/dld_obj.cc (activate): init of stdin, stdout

          * src/dld_gui.h (class DLD_Obj): init of varaddflag

          * src/dld_parser_yacc.yy: added old style syntax

          * src/dldialog.cc (dld_client): added -q -t -T arguments,
          but they are ignored (compatibility)

          * src/DLD_QT/dld_input.cc (class DLD_QTInput):
          changed to new interface

          * src/DLD_QT/dld_input.h (class DLD_QTInput): likewise

          * src/DLD_QT: added convstr to initialisation, -Wall corrections

          * src/dldialog.cc (dld_server): don't close stderr
          (dld_server): changed some cerr to DLDerr

          * src/dld_gui.h: changed ordering for -Wall

  1999-04-02  Harald Hoyer  <dldialog@parzelle.de>

          * src/dld_gui.h: Documentation updates.

          * src/DLD_TV/dld_radiolist.cc (create): select the radiobuutons first

          * src/DLD_TV/dld_list.cc (close_brace): select listitems that have their variable set

  1999-04-01  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_TV/dld_list.cc (handleEvent): activate listitems only if they are doubleclicked

          * src/DLD_TV/dld_tvobj.h (DLD_Obj): make is_exit public

          * src/DLD_TV/tcmbovwr.cpp (handleEvent): fixed mouse

          * src/DLD_TV/dld_radiolist.cc (movedTo): fixed activation
          (create): fixed initialisation

          * src/DLD_TV/dld_input.cc (DLD_TVInput): added -exit behaviour

          * src/Makefile.am: removed LIBDIR

          * src/DLD_TV/dld_combobox.cc (comboitem): set minimal width

          * src/DLD_TV/dld_list.cc (handleEvent): add handling of mouse in nonmulti list
          (selectItem): likewise

          * src/DLD_TV/dld_input.cc (handleEvent): activate if Enter pressed

          * src/DLD_TV/Makefile.am (libdld_tv_la_SOURCES): dld_comboitem.cc added

          * src/dld_parser_lex.ll: -gaugevar removed

          * src/dld_parser_yacc.yy: some cleanups, -gaugevar removed

  1999-03-26  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_TV/dld_list.cc (selectItem): fixed setting

          * src/DLD_QT/dld_radiolist.cc (create): fixed presetting

          * src/dld_obj.cc (deactivate): unset variable if it is -set

          * src/DLD_QT/dld_check.cc (create): fixed presetting

          * src/DLD_QT/dld_checklist.cc (create): fixed presetting

          * src/DLD_TV/dld_checklist.cc (create): fixed presetting

          * perl: moved all perl files in perl directory

          * src/DLD_TV/dld_input.cc (DLD_TVInput): isPasswd initialised

  1999-03-18  Harald Hoyer  <dldialog@parzelle.de>

          * src/DLD_TV/dld_list.cc: cosmetic -Wall changes

          * src/DLD_TV/dld_dialog.cc (close_brace): put child dialogs in front

          * src/DLD_QT/dld_qtcontainer.cc: app replaced with dld_app
          Assertions for nonimplemented functions added

          * src/DLD_QT/dld_qtapp.cc (~DLD_QTApp): destroyes now
          child dialogs at end.
          (DLD_QTApp): lastWindowClosed connected
          (dialog): small cleanup
          (exec): better handling of cleanup, reuse old mainDialog
          * src/DLD_QT/dld_dialog.h (class DLD_QTDialog): isEmpty added
          has_exited changed

          * src/DLD_QT/dld_dialog.cc (create): major dialog is now reused
          (done): better handling of close
          (cleanup): reusing old dialog

          * src/dld_parser_yacc.yy (YYERROR_VERBOSE): added
          small cleanups, better error handling

          * src/dld_parser_lex.ll (YY_INPUT): small error in length :)

          * src/dld_gui.h: modified DLD_Out
          DLD_Out& instead of DLD_Out

          * src/dld_app.cc (init): added
          (DLD_Out): moved to init
          (flush): added
          (DLD_Out): call flush
          (close): out check

          * released dldialog-0.19.2

          * src/DLD_TV/dld_dialog.cc (changeBounds): faster window moves
          * src/DLD_TV/dld_list.cc (DLD_TVList): changed tag char
          * src/DLD_TV/dld_tvapp.cc: new background color

  1999-03-17  Harald Hoyer  <dldialog@parzelle.de>
          * src/DLD_TV/dld_list.cc: -multi added
          * src/DLD_TV/dld_input.cc (set_length): added

  1999-03-12  Harald Hoyer  <dldialog@parzelle.de>
          * added -passwd to input

  1999-03-03  Harald Hoyer  <dldialog@parzelle.de>
          * src/DLD_QT/dld_list.cc (sizeHint): changed from 24 to 12 lines
          * src/DLD_QT/dld_input.cc (DLD_Input): setMaxLength (1024)

  1999-02-25  Harald Hoyer  <dldialog@parzelle.de>
          * src/dld_parser_yacc.yy: made old style syntax work

  1999-02-17  Harald Hoyer  <dldialog@parzelle.de>
          * dld_app.cc: (DLD_Dialog::DLD_Dialog) set_dialog added
          * dld_app.cc: gauges changed from stack to list
          * dld_gui.h: likewise
          * dld_gui.h: major cleanup
          * dld_obj.cc: deactivate(), add/del_child added
          * dld_parser_lex.ll: dld_env_end added, added prefix dld to protocol keywords
          * dld_parser_yacc.yy: DLD_lineno correction
          * dldialog.cc: removed annoying debugging messages from client
          * dldialog.cc: added prefix dld to protocol keywords
          * DLD_QT: radiolist, radiobutton, checklist, checkbutton, list, listitem added
          * DLD_QT: col, form, row added
          * DLD_TV/tsinputl.cpp: newData instead of strcpy for the possible notification

  1999-02-12  Harald Hoyer  <dldialog@parzelle.de>

          * dld_app.cc: export environment in forks
          * dld_obj.cc: likewise, convstr to global function
          * dld_app.cc: check exitstatus of gauge execs
          * dld_parser_lex.ll: moved line saving from lex-rule to YY_INPUT
          * dldialog.cc: restauration of environment in dld_send
          * DLD_TV/dld_gauge.cc: updated progress handling with child exitstatus
          * DLD_TV/dld_list.cc: updated to activate immediatly if selected
          * DLD_TV/dld_radiolist.cc: likewise
          * DLD_TV/dld_checklist.cc: likewise
  1999-02-11  Harald Hoyer  <dldialog@parzelle.de>

          * acinclude.m4: QT_LIBS added
          * dld_app.c: gauges have 100 percent if the child ends

  1999-02-09  Harald Hoyer  <dldialog@parzelle.de>

          * dldialog.spec.in: defattr added
          * dld_parser_yacc.yy: changed tmpnam to tempnam
          * dldialog.cc: sprintf replaced with strstream
          * DLD_TV/dld_lib.cc: (dld_lib_init) better terminal settings
          * DLD_TV/dld_tvapp.cc: ignoring SIGTSTP, menuBar redraw obsoleted
                                 with setsid

  1999-02-08  Harald Hoyer  <dldialog@parzelle.de>

          * dldialog.cc: DLD_Gui::parse argument wait added
          * dld_app.cc: likewise, changed select timeout to 0

  1999-01-29  Harald Hoyer  <dldialog@parzelle.de>

          * dldialog.spec.in: tests and dldialog_funcs to %doc added
          * dld_app.cc: modified for socket protocol
          * dld_parser.h: small cleanups
          * dld_parser_lex.ll: YY_INPUT rewritten to cope with sockets.
                               It now reads lines.
          * dld_parser_yacc.yy: DLD_run=-1 and listen(0) for real end
          * dldialog.cc: modified for socket protocol. outfifo, outpath removed
          * dldialog.h: likewise
          * test: added dldialog_funcs for easier shell programming

  1999-01-28  Harald Hoyer  <dldialog@parzelle.de>

          * configure.in: added enable debug, -fno-rtti
          * DLD_GEN: added --parse should now work
          * doc/: make clean removes the generated documents
          * dld_app.cc: bugfix with DLD_Out counter
          * dld_app.cc: DLD_Gui::idle -> DLD_Gui::parse improved
          * dld_parser_lex.ll: improved server-client protocol
          * dld_parser_yacc.yy: likewise
          * dldialog.cc: likewise, added flock of pipes, setsid of dldialog.cc
          * DLD_QT: beginning of migration

  1999-01-15  Harald Hoyer  <dldialog@parzelle.de>

          * major interface change
          * tvision mostly implemented

  1998-10-13  Harald Hoyer  <dldialog@parzelle.de>

          * released dldialog-0.8
          * added combobox to QT Module
          * fixed input widget of QT Module
          * added classdoc documentation
          * added dummy server arguments
          * fixed QT geometry
          * fixed -r argument

  1998-08-29  Harald Hoyer  <dldialog@parzelle.de>

          * added TV checklist, radiolist ENV Variable checking

  1998-08-27  Harald Hoyer  <dldialog@parzelle.de>

          * Released Version 0.74

  1998-08-24  Harald Hoyer  <dldialog@parzelle.de>

          * melted documentation to dldialog.sgml.cpp

  1998-08-17  Harald Hoyer  <dldialog@parzelle.de>

          * added combobox, comboitem, input
          * added -numeric, -ip, -width, -height, -file to parser
          * added generic parsing (without any GUI)

  1998-06-26  Harald Hoyer  <dldialog@parzelle.de>

          * added list, listitem
          * updated doc
          * added preset of radiolist, checklist and list with -var
          * updated tvision interface
          * changed to GNU automake, autoconfig



  88..  TThhee TTOODDOO LLiisstt


  Items in order of priority:
  ---------------------------

  * is_exit in allen Elementen, check of Elemente gleich aktiviert werden!

  * gauge: parsen von Output ... Variablen setzen

  * -focus

  * -deactivate

  * QLabel for checklist, radiolist

  * menuitem, menucheck: QT/TV

  * tooltips / jumplabel

  * shortcut autogeneration: parser, dld_obj



  99..  CCOOPPYYIINNGG



                      GNU GENERAL PUBLIC LICENSE
                         Version 2, June 1991

   Copyright (C) 1989, 1991 Free Software Foundation, Inc.
       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
   Everyone is permitted to copy and distribute verbatim copies
   of this license document, but changing it is not allowed.

                              Preamble

    The licenses for most software are designed to take away your
  freedom to share and change it.  By contrast, the GNU General Public
  License is intended to guarantee your freedom to share and change free
  software--to make sure the software is free for all its users.  This
  General Public License applies to most of the Free Software
  Foundation's software and to any other program whose authors commit to
  using it.  (Some other Free Software Foundation software is covered by
  the GNU Library General Public License instead.)  You can apply it to
  your programs, too.

    When we speak of free software, we are referring to freedom, not
  price.  Our General Public Licenses are designed to make sure that you
  have the freedom to distribute copies of free software (and charge for
  this service if you wish), that you receive source code or can get it
  if you want it, that you can change the software or use pieces of it
  in new free programs; and that you know you can do these things.

    To protect your rights, we need to make restrictions that forbid
  anyone to deny you these rights or to ask you to surrender the rights.
  These restrictions translate to certain responsibilities for you if you
  distribute copies of the software, or if you modify it.

    For example, if you distribute copies of such a program, whether
  gratis or for a fee, you must give the recipients all the rights that
  you have.  You must make sure that they, too, receive or can get the
  source code.  And you must show them these terms so they know their
  rights.

    We protect your rights with two steps: (1) copyright the software, and
  (2) offer you this license which gives you legal permission to copy,
  distribute and/or modify the software.

    Also, for each author's protection and ours, we want to make certain
  that everyone understands that there is no warranty for this free
  software.  If the software is modified by someone else and passed on, we
  want its recipients to know that what they have is not the original, so
  that any problems introduced by others will not reflect on the original
  authors' reputations.

    Finally, any free program is threatened constantly by software
  patents.  We wish to avoid the danger that redistributors of a free
  program will individually obtain patent licenses, in effect making the
  program proprietary.  To prevent this, we have made it clear that any
  patent must be licensed for everyone's free use or not licensed at all.

    The precise terms and conditions for copying, distribution and
  modification follow.

                      GNU GENERAL PUBLIC LICENSE
     TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

    0. This License applies to any program or other work which contains
  a notice placed by the copyright holder saying it may be distributed
  under the terms of this General Public License.  The "Program", below,
  refers to any such program or work, and a "work based on the Program"
  means either the Program or any derivative work under copyright law:
  that is to say, a work containing the Program or a portion of it,
  either verbatim or with modifications and/or translated into another
  language.  (Hereinafter, translation is included without limitation in
  the term "modification".)  Each licensee is addressed as "you".

  Activities other than copying, distribution and modification are not
  covered by this License; they are outside its scope.  The act of
  running the Program is not restricted, and the output from the Program
  is covered only if its contents constitute a work based on the
  Program (independent of having been made by running the Program).
  Whether that is true depends on what the Program does.

    1. You may copy and distribute verbatim copies of the Program's
  source code as you receive it, in any medium, provided that you
  conspicuously and appropriately publish on each copy an appropriate
  copyright notice and disclaimer of warranty; keep intact all the
  notices that refer to this License and to the absence of any warranty;
  and give any other recipients of the Program a copy of this License
  along with the Program.

  You may charge a fee for the physical act of transferring a copy, and
  you may at your option offer warranty protection in exchange for a fee.

    2. You may modify your copy or copies of the Program or any portion
  of it, thus forming a work based on the Program, and copy and
  distribute such modifications or work under the terms of Section 1
  above, provided that you also meet all of these conditions:

      a) You must cause the modified files to carry prominent notices
      stating that you changed the files and the date of any change.

      b) You must cause any work that you distribute or publish, that in
      whole or in part contains or is derived from the Program or any
      part thereof, to be licensed as a whole at no charge to all third
      parties under the terms of this License.

      c) If the modified program normally reads commands interactively
      when run, you must cause it, when started running for such
      interactive use in the most ordinary way, to print or display an
      announcement including an appropriate copyright notice and a
      notice that there is no warranty (or else, saying that you provide
      a warranty) and that users may redistribute the program under
      these conditions, and telling the user how to view a copy of this
      License.  (Exception: if the Program itself is interactive but
      does not normally print such an announcement, your work based on
      the Program is not required to print an announcement.)

  These requirements apply to the modified work as a whole.  If
  identifiable sections of that work are not derived from the Program,
  and can be reasonably considered independent and separate works in
  themselves, then this License, and its terms, do not apply to those
  sections when you distribute them as separate works.  But when you
  distribute the same sections as part of a whole which is a work based
  on the Program, the distribution of the whole must be on the terms of
  this License, whose permissions for other licensees extend to the
  entire whole, and thus to each and every part regardless of who wrote it.

  Thus, it is not the intent of this section to claim rights or contest
  your rights to work written entirely by you; rather, the intent is to
  exercise the right to control the distribution of derivative or
  collective works based on the Program.

  In addition, mere aggregation of another work not based on the Program
  with the Program (or with a work based on the Program) on a volume of
  a storage or distribution medium does not bring the other work under
  the scope of this License.
    3. You may copy and distribute the Program (or a work based on it,
  under Section 2) in object code or executable form under the terms of
  Sections 1 and 2 above provided that you also do one of the following:

      a) Accompany it with the complete corresponding machine-readable
      source code, which must be distributed under the terms of Sections
      1 and 2 above on a medium customarily used for software interchange; or,

      b) Accompany it with a written offer, valid for at least three
      years, to give any third party, for a charge no more than your
      cost of physically performing source distribution, a complete
      machine-readable copy of the corresponding source code, to be
      distributed under the terms of Sections 1 and 2 above on a medium
      customarily used for software interchange; or,

      c) Accompany it with the information you received as to the offer
      to distribute corresponding source code.  (This alternative is
      allowed only for noncommercial distribution and only if you
      received the program in object code or executable form with such
      an offer, in accord with Subsection b above.)

  The source code for a work means the preferred form of the work for
  making modifications to it.  For an executable work, complete source
  code means all the source code for all modules it contains, plus any
  associated interface definition files, plus the scripts used to
  control compilation and installation of the executable.  However, as a
  special exception, the source code distributed need not include
  anything that is normally distributed (in either source or binary
  form) with the major components (compiler, kernel, and so on) of the
  operating system on which the executable runs, unless that component
  itself accompanies the executable.

  If distribution of executable or object code is made by offering
  access to copy from a designated place, then offering equivalent
  access to copy the source code from the same place counts as
  distribution of the source code, even though third parties are not
  compelled to copy the source along with the object code.

    4. You may not copy, modify, sublicense, or distribute the Program
  except as expressly provided under this License.  Any attempt
  otherwise to copy, modify, sublicense or distribute the Program is
  void, and will automatically terminate your rights under this License.
  However, parties who have received copies, or rights, from you under
  this License will not have their licenses terminated so long as such
  parties remain in full compliance.

    5. You are not required to accept this License, since you have not
  signed it.  However, nothing else grants you permission to modify or
  distribute the Program or its derivative works.  These actions are
  prohibited by law if you do not accept this License.  Therefore, by
  modifying or distributing the Program (or any work based on the
  Program), you indicate your acceptance of this License to do so, and
  all its terms and conditions for copying, distributing or modifying
  the Program or works based on it.

    6. Each time you redistribute the Program (or any work based on the
  Program), the recipient automatically receives a license from the
  original licensor to copy, distribute or modify the Program subject to
  these terms and conditions.  You may not impose any further
  restrictions on the recipients' exercise of the rights granted herein.
  You are not responsible for enforcing compliance by third parties to
  this License.

    7. If, as a consequence of a court judgment or allegation of patent
  infringement or for any other reason (not limited to patent issues),
  conditions are imposed on you (whether by court order, agreement or
  otherwise) that contradict the conditions of this License, they do not
  excuse you from the conditions of this License.  If you cannot
  distribute so as to satisfy simultaneously your obligations under this
  License and any other pertinent obligations, then as a consequence you
  may not distribute the Program at all.  For example, if a patent
  license would not permit royalty-free redistribution of the Program by
  all those who receive copies directly or indirectly through you, then
  the only way you could satisfy both it and this License would be to
  refrain entirely from distribution of the Program.

  If any portion of this section is held invalid or unenforceable under
  any particular circumstance, the balance of the section is intended to
  apply and the section as a whole is intended to apply in other
  circumstances.

  It is not the purpose of this section to induce you to infringe any
  patents or other property right claims or to contest validity of any
  such claims; this section has the sole purpose of protecting the
  integrity of the free software distribution system, which is
  implemented by public license practices.  Many people have made
  generous contributions to the wide range of software distributed
  through that system in reliance on consistent application of that
  system; it is up to the author/donor to decide if he or she is willing
  to distribute software through any other system and a licensee cannot
  impose that choice.

  This section is intended to make thoroughly clear what is believed to
  be a consequence of the rest of this License.

    8. If the distribution and/or use of the Program is restricted in
  certain countries either by patents or by copyrighted interfaces, the
  original copyright holder who places the Program under this License
  may add an explicit geographical distribution limitation excluding
  those countries, so that distribution is permitted only in or among
  countries not thus excluded.  In such case, this License incorporates
  the limitation as if written in the body of this License.

    9. The Free Software Foundation may publish revised and/or new versions
  of the General Public License from time to time.  Such new versions will
  be similar in spirit to the present version, but may differ in detail to
  address new problems or concerns.

  Each version is given a distinguishing version number.  If the Program
  specifies a version number of this License which applies to it and "any
  later version", you have the option of following the terms and conditions
  either of that version or of any later version published by the Free
  Software Foundation.  If the Program does not specify a version number of
  this License, you may choose any version ever published by the Free Software
  Foundation.

    10. If you wish to incorporate parts of the Program into other free
  programs whose distribution conditions are different, write to the author
  to ask for permission.  For software which is copyrighted by the Free
  Software Foundation, write to the Free Software Foundation; we sometimes
  make exceptions for this.  Our decision will be guided by the two goals
  of preserving the free status of all derivatives of our free software and
  of promoting the sharing and reuse of software generally.

                              NO WARRANTY

    11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
  FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
  OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
  PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
  OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
  TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
  PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
  REPAIR OR CORRECTION.

    12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
  WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
  REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
  INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
  OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
  TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
  YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
  PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGES.

                       END OF TERMS AND CONDITIONS



